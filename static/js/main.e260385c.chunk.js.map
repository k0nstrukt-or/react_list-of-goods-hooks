{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isVisible","visibleGoods","isReversed","reverseGoods","NONE","sortType","setSortType","goodsCopy","LENGTH","sort","good","prevGood","length","ALPABET","localeCompare","reverse","className","type","onClick","map","ReactDOM","render","document","getElementById"],"mappings":"wJAiBKA,E,4CAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAmCF,oBAAS,GAA5C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAmBH,EAASQ,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAS,UAAOV,GAgBtB,OAAQQ,GACN,KAAKT,EAASY,OACZD,EAAUE,MAAK,SAACC,EAAMC,GAAP,OAAoBD,EAAKE,OAASD,EAASC,UAC1D,MAEF,KAAKhB,EAASiB,QACZN,EAAUE,MAAK,SAACC,EAAMC,GAAP,OAAoBD,EAAKI,cAAcH,MAU1D,OAJIT,GACFK,EAAUQ,UAIV,sBAAKC,UAAU,MAAf,WACIhB,GACA,wBACEgB,UAAU,gCACVC,KAAK,SACLC,QApCU,WAChBjB,GAAa,IAgCT,mBASDD,GACC,sBAAKgB,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,SACIT,EAAUY,KAAI,SAACT,GAAD,OACd,oBAAIM,UAAU,cAAd,SACGN,GAD8BA,QAMrC,sBAAKM,UAAU,mBAAf,UACE,wBACEA,UAAU,kCACVC,KAAK,SACLC,QApDI,WACdf,GAAcD,IAgDN,qBAQA,wBACEc,UAAU,gCACVC,KAAK,SACLC,QAxDE,WACZjB,GAAa,GACbK,EAAYV,EAASQ,MACrBD,GAAa,IAkDL,mBAQA,wBACEa,UAAU,iCACVC,KAAK,SACLC,QAAS,kBAAMZ,EAAYV,EAASY,SAHtC,4BAQA,wBACEQ,UAAU,mCACVC,KAAK,SACLC,QAAS,kBAAMZ,EAAYV,EAASiB,UAHtC,2CCxGZO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.e260385c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [isVisible, visibleGoods] = useState(false);\n  const [isReversed, reverseGoods] = useState(false);\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n\n  const goodsCopy = [...goodsFromServer];\n\n  const showGoods = () => {\n    visibleGoods(true);\n  };\n\n  const reverse = () => {\n    reverseGoods(!isReversed);\n  };\n\n  const reset = () => {\n    visibleGoods(false);\n    setSortType(SortType.NONE);\n    reverseGoods(false);\n  };\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      goodsCopy.sort((good, prevGood) => good.length - prevGood.length);\n      break;\n\n    case SortType.ALPABET:\n      goodsCopy.sort((good, prevGood) => good.localeCompare(prevGood));\n      break;\n\n    default:\n  }\n\n  if (isReversed) {\n    goodsCopy.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      {!isVisible && (\n        <button\n          className=\"button buttons__forSort-start\"\n          type=\"button\"\n          onClick={showGoods}\n        >\n          Start\n        </button>\n      )}\n\n      {isVisible && (\n        <div className=\"Goods\">\n          <ul className=\"Goods__list\">\n            {(goodsCopy.map((good) => (\n              <li className=\"Goods__item\" key={good}>\n                {good}\n              </li>\n            )))}\n          </ul>\n\n          <div className=\"buttons__forSort\">\n            <button\n              className=\"button buttons__forSort-reverse\"\n              type=\"button\"\n              onClick={reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              className=\"button buttons__forSort-reset\"\n              type=\"button\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n\n            <button\n              className=\"button buttons__forSort-length\"\n              type=\"button\"\n              onClick={() => setSortType(SortType.LENGTH)}\n            >\n              Sort By Length\n            </button>\n\n            <button\n              className=\"button buttons__forSort-alphabet\"\n              type=\"button\"\n              onClick={() => setSortType(SortType.ALPABET)}\n            >\n              Sort alphabetically\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}